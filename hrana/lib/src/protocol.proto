// Adapted from: 
// - https://github.com/tursodatabase/libsql/blob/main/docs/HRANA_3_SPEC.md
// - https://github.com/tursodatabase/libsql/blob/main/libsql-hrana/src/proto.rs

syntax = "proto3";

message Error {
  string message = 1;
  optional string code = 2;
}

message Stmt {
  optional string sql = 1;
  optional int32 sql_id = 2;
  repeated Value args = 3;
  repeated NamedArg named_args = 4;
  optional bool want_rows = 5;
}

message NamedArg {
  string name = 1;
  Value value = 2;
}

message StmtResult {
  repeated Col cols = 1;
  repeated Row rows = 2;
  uint64 affected_row_count = 3;
  optional sint64 last_insert_rowid = 4;
  optional uint64 replication_index = 5;
  uint64 rows_read = 6;
  uint64 rows_written = 7;
  double query_duration_ms = 8;
}

message Col {
  optional string name = 1;
  optional string decltype = 2;
}

message Row {
  repeated Value values = 1;
}

message Batch {
  repeated BatchStep steps = 1;
}

message BatchStep {
  optional BatchCond condition = 1;
  Stmt stmt = 2;
}

message BatchCond {
  oneof cond {
    uint32 step_ok = 1;
    uint32 step_error = 2;
    BatchCond not = 3;
    CondList and = 4;
    CondList or = 5;
    IsAutocommit is_autocommit = 6;
  }

  message CondList {
    repeated BatchCond conds = 1;
  }

  message IsAutocommit {
  }
}

message BatchResult {
  map<uint32, StmtResult> step_results = 1;
  map<uint32, Error> step_errors = 2;
}

message CursorEntry {
  oneof entry {
    StepBeginEntry step_begin = 1;
    StepEndEntry step_end = 2;
    StepErrorEntry step_error = 3;
    Row row = 4;
    Error error = 5;
  }
}

message StepBeginEntry {
  uint32 step = 1;
  repeated Col cols = 2;
}

message StepEndEntry {
  uint64 affected_row_count = 1;
  optional sint64 last_insert_rowid = 2;
}

message StepErrorEntry {
  uint32 step = 1;
  Error error = 2;
}

message DescribeResult {
  repeated DescribeParam params = 1;
  repeated DescribeCol cols = 2;
  bool is_explain = 3;
  bool is_readonly = 4;
}

message DescribeParam {
  optional string name = 1;
}

message DescribeCol {
  string name = 1;
  optional string decltype = 2;
}

message Value {
  oneof value {
    Null null = 1;
    sint64 integer = 2;
    double float = 3;
    string text = 4;
    bytes blob = 5;
  }

  message Null {}
}

message ClientMsg {
  oneof msg {
    HelloMsg hello = 1;
    RequestMsg request = 2;
  }
}

message ServerMsg {
  oneof msg {
    HelloOkMsg hello_ok = 1;
    HelloErrorMsg hello_error = 2;
    ResponseOkMsg response_ok = 3;
    ResponseErrorMsg response_error = 4;
  }
}

message HelloMsg {
  optional string jwt = 1;
}

message HelloOkMsg {
}

message HelloErrorMsg {
  Error error = 1;
}

message RequestMsg {
  int32 request_id = 1;
  oneof request {
    OpenStreamReq open_stream = 2;
    CloseStreamReq close_stream = 3;
    ExecuteReq execute = 4;
    BatchReq batch = 5;
    OpenCursorReq open_cursor = 6;
    CloseCursorReq close_cursor = 7;
    FetchCursorReq fetch_cursor = 8;
    SequenceReq sequence = 9;
    DescribeReq describe = 10;
    StoreSqlReq store_sql = 11;
    CloseSqlReq close_sql = 12;
    GetAutocommitReq get_autocommit = 13;
  }
}

message ResponseOkMsg {
  int32 request_id = 1;
  oneof response {
    OpenStreamResp open_stream = 2;
    CloseStreamResp close_stream = 3;
    ExecuteResp execute = 4;
    BatchResp batch = 5;
    OpenCursorResp open_cursor = 6;
    CloseCursorResp close_cursor = 7;
    FetchCursorResp fetch_cursor = 8;
    SequenceResp sequence = 9;
    DescribeResp describe = 10;
    StoreSqlResp store_sql = 11;
    CloseSqlResp close_sql = 12;
    GetAutocommitResp get_autocommit = 13;
  }
}

message ResponseErrorMsg {
  int32 request_id = 1;
  Error error = 2;
}

message OpenStreamReq {
  int32 stream_id = 1;
}

message OpenStreamResp {
}

message CloseStreamReq {
  int32 stream_id = 1;
}

message CloseStreamResp {
}

message ExecuteReq {
  int32 stream_id = 1;
  Stmt stmt = 2;
}

message ExecuteStreamReq {
  Stmt stmt = 1;
}

message ExecuteResp {
  StmtResult result = 1;
}

message BatchReq {
  int32 stream_id = 1;
  Batch batch = 2;
}

message BatchStreamReq {
  Batch batch = 1;
}

message BatchResp {
  BatchResult result = 1;
}

message OpenCursorReq {
  int32 stream_id = 1;
  int32 cursor_id = 2;
  Batch batch = 3;
}

message OpenCursorResp {
}

message CloseCursorReq {
  int32 cursor_id = 1;
}

message CloseCursorResp {
}

message FetchCursorReq {
  int32 cursor_id = 1;
  uint32 max_count = 2;
}

message FetchCursorResp {
  repeated CursorEntry entries = 1;
  bool done = 2;
}

message StoreSqlReq {
  int32 sql_id = 1;
  string sql = 2;
}

message StoreSqlResp {
}

message CloseSqlReq {
  int32 sql_id = 1;
}

message CloseSqlResp {
}

message SequenceReq {
  int32 stream_id = 1;
  optional string sql = 2;
  optional int32 sql_id = 3;
}

message SequenceStreamReq {
  optional string sql = 1;
  optional int32 sql_id = 2;
}

message SequenceResp {
}

message DescribeReq {
  int32 stream_id = 1;
  optional string sql = 2;
  optional int32 sql_id = 3;
}

message DescribeStreamReq {
  optional string sql = 1;
  optional int32 sql_id = 2;
}

message DescribeResp {
  DescribeResult result = 1;
}

message GetAutocommitReq {
  int32 stream_id = 1;
}

message GetAutocommitStreamReq {}

message GetAutocommitResp {
  bool is_autocommit = 1;
}

message PipelineReq {
  optional string baton = 1;
  repeated StreamRequest requests = 2;
}

message StreamRequest {
  oneof request {
    CloseStreamReq close = 1;
    ExecuteStreamReq execute = 2;
    BatchStreamReq batch = 3;
    SequenceStreamReq sequence = 4;
    DescribeStreamReq describe = 5;
    StoreSqlReq store_sql = 6;
    CloseSqlReq close_sql = 7;
    GetAutocommitStreamReq get_autocommit = 8;
  }
}

message PipelineResp {
  optional string baton = 1;
  optional string base_url = 2;
  repeated StreamResult results = 3;
}

message StreamResult {
  oneof result {
    StreamResponse ok = 1;
    Error error = 2;
  }
}

message StreamResponse {
  oneof response {
    CloseStreamResp close = 1;
    ExecuteResp execute = 2;
    BatchResp batch = 3;
    SequenceResp sequence = 4;
    DescribeResp describe = 5;
    StoreSqlResp store_sql = 6;
    CloseSqlResp close_sql = 7;
    GetAutocommitResp get_autocommit = 8;
  }
}
